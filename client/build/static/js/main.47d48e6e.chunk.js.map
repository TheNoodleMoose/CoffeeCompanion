{"version":3,"sources":["assets/images sync /^/.*OzCup/.svg$","assets/images/12OzCup.svg","assets/images/24OzCup.svg","assets/images/36OzCup.svg","assets/images/coarse_bean.svg","services/AuthenticationService.js","Components/Login.js","Components/Register.js","Components/Brewing.js","Components/withAuth.js","App.js","serviceWorker.js","index.js"],"names":["map","./12OzCup.svg","./24OzCup.svg","./36OzCup.svg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","AuthHelperMethods","login","_callee","email","password","res","regenerator_default","a","wrap","_context","prev","next","_this","fetchHeader","method","body","JSON","stringify","sent","setToken","token","abrupt","Promise","stop","this","loggedIn","getToken","isTokenExpired","decode","exp","Date","now","err","console","log","idToken","localStorage","setItem","getItem","logout","removeItem","getConfirm","answer","url","options","headers","Accept","Content-Type","Authorization","concat","fetch","objectSpread","then","checkStatus","response","json","status","error","statusText","Login","state","Auth","AuthHelperFunctions","handleChange","event","_event$target","target","value","name","setState","defineProperty","submitForm","_this$state","history","preventDefault","props","success","push","replace","submitFakeForm","_this$state2","react_default","createElement","CoffeeImage","src","alt","Card","Form","data-testid","onSubmit","InputField","htmlFor","Input","onChange","type","LoginButton","Link","to","Component","styled","div","_templateObject","form","_templateObject2","label","_templateObject3","input","_templateObject4","button","_templateObject5","img","_templateObject6","Register","data","axios","post","redirect","Redirect","Register_CoffeeImage","Register_Card","Register_Form","Register_InputField","Register_Input","Register_LoginButton","Register_templateObject","Register_templateObject2","Register_templateObject3","Register_templateObject4","Register_templateObject5","Register_templateObject6","withAuth","AuthComponent","_Component","AuthWrapped","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","confirm","loaded","inherits","createClass","key","country","roaster","brew_method","coffeeAmount","coffeeStrength","coffeeCoarseness","brewMethods","brewAmount","amount","grindSizes","grind","text","handleChangeHorizontal","LogOut","userInfo","username","_this2","Brewing_LoginButton","onClick","Brewing_Card","QuestionMark","Brewing_InputField","Brewing_Input","BrewMethodContainer","BrewMethodButton","BrewMethodLabel","ButtonContainer","AmountButton","BrewAmountLabel","require","BrewStrengthContainer","react_rangeslider_lib_default","min","max","parseFloat","format","MuscleImg","GrindSizeContainer","grindSize","GrindSizeButton","GrindSizeLabel","GrindText","StartButton","Brewing_templateObject","Brewing_templateObject2","Brewing_templateObject3","Brewing_templateObject4","Brewing_templateObject5","Brewing_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_templateObject13","span","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","App","CurrentUser","updateUser","logOut","BrowserRouter","className","Switch","Route","exact","path","render","Components_Register","assign","Components_Login","Components_Brewing","currentUser","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47d48e6e.chunk.js","sourcesContent":["var map = {\n\t\"./12OzCup.svg\": 84,\n\t\"./24OzCup.svg\": 85,\n\t\"./36OzCup.svg\": 86\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 83;","module.exports = __webpack_public_path__ + \"static/media/12OzCup.2a82234e.svg\";","module.exports = __webpack_public_path__ + \"static/media/24OzCup.25c9eaf8.svg\";","module.exports = __webpack_public_path__ + \"static/media/36OzCup.a078eeae.svg\";","module.exports = __webpack_public_path__ + \"static/media/coarse_bean.0cf23e15.svg\";","import decode from 'jwt-decode';\n\nexport default class AuthHelperMethods {\n  login = async (email, password) => {\n    const res = await this.fetchHeader('/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n    });\n    this.setToken(res.token); // Setting the token in localStorage\n    return Promise.resolve(res);\n  };\n\n  loggedIn = () => {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken(); // Getting token from localstorage\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  };\n\n  isTokenExpired = (token) => {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        // Checking if token is expired.\n        return true;\n      }\n      return false;\n    } catch (err) {\n      console.log('expired check failed! Line 42: AuthService.js');\n      return false;\n    }\n  };\n\n  setToken = (idToken) => {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n  };\n\n  getToken = () => localStorage.getItem('id_token');\n\n  logout = () => {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n  };\n\n  getConfirm = () => {\n    // Using jwt-decode npm package to decode the token\n    const answer = decode(this.getToken());\n    console.log('Recieved answer!');\n    return answer;\n  };\n\n  fetchHeader = (url, options) => {\n    // performs api calls sending the required authentication headers\n    const headers = {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    };\n    // Setting Authorization header\n    // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\n    if (this.loggedIn()) {\n      headers.Authorization = `Bearer ${this.getToken()}`;\n    }\n\n    return fetch(url, {\n      headers,\n      ...options,\n    })\n      .then(this.checkStatus)\n      .then(response => response.json());\n  };\n\n  checkStatus = (response) => {\n    // raises an error in case response status is not a success\n    if (response.status >= 200 && response.status < 300) {\n      // Success status lies between 200 to 300\n      return response;\n    }\n    const error = new Error(response.statusText);\n    error.response = response;\n    throw error;\n  };\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport AuthHelperFunctions from '../services/AuthenticationService';\n\nclass Login extends Component {\n  state = {\n    email: '',\n    password: '',\n  };\n\n  Auth = new AuthHelperFunctions();\n\n  componentWillMount() {\n    const { history } = this.props;\n    if (this.Auth.loggedIn() === true) {\n      history.replace('/Brewing');\n    }\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitForm = async (event) => {\n    event.preventDefault();\n\n    const { email, password } = this.state;\n    const { history } = this.props;\n\n    const res = await this.Auth.login(email, password);\n    if (res.success === true) {\n      history.push('/Brewing');\n    }\n  };\n\n  render() {\n    const { submitFakeForm } = this.props;\n    const { email, password } = this.state;\n\n    return (\n      <div>\n        <CoffeeImage src=\"https://img.icons8.com/cotton/64/000000/cup.png\" alt=\"coffee-mug\" />\n        <Card>\n          <h1>Log In</h1>\n          <Form\n            data-testid=\"login-form\"\n            // For Testing Switch || to &&\n            onSubmit={this.submitForm || (() => submitFakeForm({ email, password }))}\n          >\n            <InputField htmlFor=\"email\">\n              Email\n              <Input\n                id=\"email\"\n                value={email}\n                name=\"email\"\n                onChange={this.handleChange}\n                type=\"email\"\n              />\n            </InputField>\n            <InputField htmlFor=\"password\">\n              Password\n              <Input\n                id=\"password\"\n                value={password}\n                name=\"password\"\n                onChange={this.handleChange}\n                type=\"password\"\n              />\n            </InputField>\n\n            <LoginButton data-testid=\"login-button\" type=\"submit\">\n              Login\n            </LoginButton>\n          </Form>\n        </Card>\n        <p>Don&apos;t Have An Account?</p>\n        <Link to=\"/\">\n          <p>Sign Up Here</p>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n  margin-top: 50px;\n  padding: 10px;\n  width: 300px;\n  height: auto;\n  background-color: #f3f1ee;\n  color: #2f2923;\n  border-radius: 10px;\n  box-shadow: 1px 4px 21px 2px rgba(224, 208, 224, 1);\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nconst InputField = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 10px 0;\n`;\n\nconst Input = styled.input`\n  border-radius: 2px;\n  border: 2px solid #e0ddd9;\n  height: 25px;\n  width: 275px;\n`;\n\nconst LoginButton = styled.button`\n  background: #67615a;\n  color: white;\n  font-weight: bold;\n  font-size: 18px;\n  border: none;\n  border-radius: 5px;\n  margin: 20px 0;\n  width: 150px;\n  height: 30px;\n`;\n\nconst CoffeeImage = styled.img`\n  width: 100px;\n  height: 100px;\n`;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport AuthHelperMethods from '../services/AuthenticationService';\n\nclass Register extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  Auth = new AuthHelperMethods();\n\n  componentWillMount() {\n    if (this.Auth.loggedIn() === true) {\n      this.props.history.replace('/Brewing');\n    }\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitForm = async (event) => {\n    event.preventDefault();\n\n    const { name, email, password } = this.state;\n    const data = await axios.post('/register', {\n      name,\n      email,\n      password,\n    });\n\n    const { success } = data.data;\n    if (success === true) {\n      const res = await this.Auth.login(email, password);\n      if (res.success === true) {\n        this.props.history.push('/Brewing');\n      }\n    }\n  };\n\n  render() {\n    const { submitFakeForm } = this.props;\n    const {\n      email, password, name, redirect,\n    } = this.state;\n    if (redirect) {\n      return <Redirect push to=\"/Brewing\" />;\n    }\n    return (\n      <div>\n        <CoffeeImage src=\"https://img.icons8.com/cotton/64/000000/cup.png\" alt=\"coffee-mug\" />\n        <Card>\n          <h1>Sign Up</h1>\n          <Form\n            data-testid=\"login-form\"\n            // For Testing Switch || to &&\n            onSubmit={this.submitForm || (() => submitFakeForm({ email, password }))}\n          >\n            <InputField htmlFor=\"name\">\n              Name\n              <Input id=\"name\" value={name} name=\"name\" onChange={this.handleChange} type=\"text\" />\n            </InputField>\n            <InputField htmlFor=\"email\">\n              Email\n              <Input\n                id=\"email\"\n                value={email}\n                name=\"email\"\n                onChange={this.handleChange}\n                type=\"email\"\n              />\n            </InputField>\n            <InputField htmlFor=\"password\">\n              Password\n              <Input\n                id=\"password\"\n                value={password}\n                name=\"password\"\n                onChange={this.handleChange}\n                type=\"password\"\n              />\n            </InputField>\n\n            <LoginButton data-testid=\"login-button\" type=\"submit\">\n              Sign Up\n            </LoginButton>\n          </Form>\n        </Card>\n        <p>Have An Account?</p>\n        <Link to=\"/login\">\n          <p>Login Here!</p>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n  margin-top: 50px;\n  padding: 10px;\n  width: 300px;\n  height: auto;\n  background-color: #f3f1ee;\n  color: #2f2923;\n  border-radius: 10px;\n  box-shadow: 1px 4px 21px 2px rgba(224, 208, 224, 1);\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nconst InputField = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 10px 0;\n`;\n\nconst Input = styled.input`\n  border-radius: 2px;\n  border: 2px solid #e0ddd9;\n  height: 25px;\n  width: 275px;\n`;\n\nconst LoginButton = styled.button`\n  background: #67615a;\n  color: white;\n  font-weight: bold;\n  font-size: 18px;\n  border: none;\n  border-radius: 5px;\n  margin: 20px 0;\n  width: 150px;\n  height: 30px;\n`;\n\nconst CoffeeImage = styled.img`\n  width: 100px;\n  height: 100px;\n`;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Slider from 'react-rangeslider';\nimport 'react-rangeslider/lib/index.css';\nimport AuthHelperMethods from '../services/AuthenticationService';\nimport withAuth from './withAuth';\n\nclass Brewing extends Component {\n  state = {\n    country: '',\n    roaster: '',\n    brew_method: '',\n    coffeeAmount: '',\n    coffeeStrength: '15',\n    coffeeCoarseness: '',\n    brewMethods: [\n      {\n        id: 1,\n        name: 'Chemex',\n      },\n      {\n        id: 2,\n        name: 'Hario V60',\n      },\n      {\n        id: 3,\n        name: 'Kalita',\n      },\n      {\n        id: 4,\n        name: 'Cold Brew',\n      },\n    ],\n    brewAmount: [\n      {\n        id: 5,\n        amount: 12,\n      },\n      {\n        id: 6,\n        amount: 24,\n      },\n      {\n        id: 7,\n        amount: 36,\n      },\n    ],\n    grindSizes: [\n      {\n        id: 8,\n        grind: 'Extra Coarse',\n        text: 'Slightly larger than kosher salt',\n      },\n      {\n        id: 9,\n        grind: 'Coarse',\n        text: 'Similar to kosher salt',\n      },\n      {\n        id: 10,\n        grind: 'Med-Coarse',\n        text: 'Coarse Sand',\n      },\n      {\n        id: 11,\n        grind: 'Medium',\n        text: 'Slightly smaller than table salt',\n      },\n      {\n        id: 12,\n        grind: 'Fine',\n        text: 'Slightly finer than sugar',\n      },\n      {\n        id: 13,\n        grind: 'Extra Fine',\n        text: 'Similar to powdered sugar',\n      },\n    ],\n  };\n\n  Auth = new AuthHelperMethods();\n\n  componentDidMount() {\n    const userInfo = this.Auth.getConfirm();\n    this.setState({\n      username: userInfo.name,\n    });\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleChangeHorizontal = (value) => {\n    this.setState({\n      coffeeStrength: value,\n    });\n  };\n\n  LogOut = () => {\n    this.Auth.logout();\n    const { history } = this.props;\n    history.replace('/login');\n  };\n\n  render() {\n    const {\n      country,\n      roaster,\n      brewMethods,\n      username,\n      coffeeAmount,\n      brewAmount,\n      coffeeStrength,\n      grindSizes,\n    } = this.state;\n\n    const formatg = value => `${value} g`;\n\n    return (\n      <div>\n        <LoginButton data-testid=\"login-button\" type=\"button\" onClick={this.LogOut}>\n          Logout\n        </LoginButton>\n\n        <h1 data-testid=\"users-intro\">Hi {username}!</h1>\n        <h1>Let&apos;s brew an awesome cup of coffee!</h1>\n        <form>\n          {/* Country and Roaster Section */}\n          <Card>\n            <QuestionMark\n              src=\"https://img.icons8.com/ios/50/000000/help.png\"\n              alt=\"question-country\"\n            />\n            <h3>What type of coffee are we brewing?</h3>\n            <InputField htmlFor=\"country\">\n              Country, Region\n              <Input\n                id=\"country\"\n                value={country}\n                name=\"country\"\n                onChange={this.handleChange}\n                type=\"text\"\n              />\n            </InputField>\n            <InputField htmlFor=\"roaster\">\n              Roaster\n              <Input\n                id=\"roaster\"\n                value={roaster}\n                name=\"roaster\"\n                onChange={this.handleChange}\n                type=\"text\"\n              />\n            </InputField>\n          </Card>\n          {/* Brew Method Section */}\n          <Card>\n            <QuestionMark\n              src=\"https://img.icons8.com/ios/50/000000/help.png\"\n              alt=\"question-country\"\n            />\n            <h3>What brew method are we using?</h3>\n            <BrewMethodContainer>\n              {brewMethods.map(method => (\n                <div key={method.id}>\n                  <BrewMethodButton\n                    id={method.id}\n                    value={method.name}\n                    name=\"brew_method\"\n                    onClick={this.handleChange}\n                    type=\"radio\"\n                  />\n                  <BrewMethodLabel htmlFor={method.id}>\n                    <img src=\"https://img.icons8.com/small/32/000000/temperature.png\" alt=\"temp\" />\n                    <span>{method.name}</span>\n                  </BrewMethodLabel>\n                </div>\n              ))}\n            </BrewMethodContainer>\n          </Card>\n          <Card>\n            <QuestionMark\n              src=\"https://img.icons8.com/ios/50/000000/help.png\"\n              alt=\"question-country\"\n            />\n            <h3>How much coffee are we making?</h3>\n            <ButtonContainer>\n              {brewAmount.map(amount => (\n                <div key={amount.id}>\n                  <AmountButton\n                    id={amount.id}\n                    value={amount.amount}\n                    name=\"coffeeAmount\"\n                    onClick={this.handleChange}\n                    type=\"radio\"\n                  />\n                  <BrewAmountLabel htmlFor={amount.id}>\n                    <img\n                      src={require(`../assets/images/${amount.amount}OzCup.svg`)}\n                      alt=\"coffee-mug-amount\"\n                    />\n                  </BrewAmountLabel>\n                </div>\n              ))}\n            </ButtonContainer>\n            <h3>{coffeeAmount} Oz</h3>\n          </Card>\n\n          <Card>\n            <QuestionMark\n              src=\"https://img.icons8.com/ios/50/000000/help.png\"\n              alt=\"question-country\"\n            />\n            <h3>How strong do you like your coffee?</h3>\n            <BrewStrengthContainer>\n              <Slider\n                min={15}\n                max={20}\n                value={parseFloat(coffeeStrength)}\n                format={formatg}\n                onChange={this.handleChangeHorizontal}\n              />\n              <MuscleImg\n                src=\"https://img.icons8.com/ios/50/000000/flex-biceps.png\"\n                alt=\"how-strong\"\n              />\n            </BrewStrengthContainer>\n            <h3>1: {coffeeStrength}g Coffee to water</h3>\n          </Card>\n          <Card>\n            <QuestionMark\n              src=\"https://img.icons8.com/ios/50/000000/help.png\"\n              alt=\"question-country\"\n            />\n            <h3>How fine are we grinding this?</h3>\n            <img src={require('../assets/images/coarse_bean.svg')} alt=\"coffee-bean\" />\n            <GrindSizeContainer>\n              {grindSizes.map(grindSize => (\n                <div key={grindSize.id}>\n                  <GrindSizeButton\n                    id={grindSize.id}\n                    value={grindSize.grind}\n                    name=\"coffeeCoarseness\"\n                    onClick={this.handleChange}\n                    type=\"radio\"\n                  />\n                  <GrindSizeLabel htmlFor={grindSize.id}>\n                    <span>{grindSize.grind}</span>\n                    <GrindText>{grindSize.text}</GrindText>\n                  </GrindSizeLabel>\n                </div>\n              ))}\n            </GrindSizeContainer>\n          </Card>\n\n          <StartButton type=\"submit\">Let&apos;s Get Brewing!</StartButton>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Brewing);\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n  margin-top: 24px;\n  padding: 10px;\n  width: 300px;\n  height: auto;\n  background-color: #f3f1ee;\n  color: #2f2923;\n  border-radius: 10px;\n  box-shadow: 1px 4px 21px 2px rgba(224, 208, 224, 1);\n`;\n\nconst InputField = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 10px 0;\n`;\n\nconst Input = styled.input`\n  border-radius: 2px;\n  border: 2px solid #e0ddd9;\n  height: 25px;\n  width: 275px;\n`;\n\nconst BrewMethodContainer = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n`;\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n`;\n\nconst GrindSizeContainer = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n`;\n\nconst BrewStrengthContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst BrewMethodLabel = styled.label`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  background-color: #85817d;\n  font-weight: bold;\n  color: white;\n  width: 125px;\n  height: 40px;\n  border-radius: 15px;\n  margin: 5px;\n`;\n\nconst BrewMethodButton = styled.input`\n  display: none;\n  margin: 10px 0;\n  &:checked + ${BrewMethodLabel} {\n    background: #67615a;\n  }\n`;\n\nconst BrewAmountLabel = styled.label`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  font-weight: bold;\n  color: white;\n  width: 75px;\n  height: 60px;\n  border-radius: 15px;\n  margin: 10px;\n`;\n\nconst AmountButton = styled.input`\n  display: none;\n  margin: 10px 0;\n`;\n\nconst GrindSizeLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  justidtalign-items: center;\n  background-color: #67615a;\n  font-weight: bold;\n  color: white;\n  width: 125px;\n  height: 70px;\n  border-radius: 3px;\n  margin: 10px;\n`;\nconst GrindSizeButton = styled.input`\n  margin: 10px 0;\n  display: none;\n  &:checked + ${GrindSizeLabel} {\n    background: #85817d;\n  }\n`;\n\nconst GrindText = styled.span`\n  font-size: 14px;\n  font-weight: 500;\n`;\nconst LoginButton = styled.button`\n  background: #67615a;\n  color: white;\n  font-weight: bold;\n  font-size: 18px;\n  border: none;\n  border-radius: 5px;\n  margin: 20px 0;\n  width: 150px;\n  height: 30px;\n`;\n\nconst StartButton = styled.button`\n  background: #67615a;\n  color: white;\n  font-weight: bold;\n  font-size: 18px;\n  border: none;\n  border-radius: 3px;\n  margin: 20px 0;\n  width: 200px;\n  height: 40px;\n`;\n\nconst QuestionMark = styled.img`\n  width: 20px;\n  height: 20px;\n`;\n\nconst MuscleImg = styled.img`\n  width: 38px;\n  height: 37px;\n  margin: 0 10px;\n`;\n","import React, { Component } from 'react';\nimport AuthHelperMethods from '../services/AuthenticationService';\n\n/* A higher order component is frequently written as a function that returns a class. */\nexport default function withAuth(AuthComponent) {\n  const Auth = new AuthHelperMethods();\n\n  return class AuthWrapped extends Component {\n    state = {\n      confirm: null,\n      loaded: false,\n    };\n\n    /* In the componentDidMount, we would want to do a couple of\n    important tasks in order to verify the current users authentication status\n    prior to granting them enterance into the app. */\n    componentWillMount() {\n      const { history } = this.props;\n      if (!Auth.loggedIn()) {\n        history.replace('/login');\n      } else {\n        /* Try to get confirmation message from the Auth helper. */\n        try {\n          const confirm = Auth.getConfirm();\n          console.log('confirmation is:', confirm);\n          this.setState({\n            confirm,\n            loaded: true,\n          });\n        } catch (err) {\n          console.log(err);\n          Auth.logout();\n          history.replace('/login');\n        }\n      }\n    }\n\n    render() {\n      const { history } = this.props;\n      const { loaded, confirm } = this.state;\n      if (loaded === true) {\n        if (confirm) {\n          console.log('confirmed!');\n          return (\n            /* component that is currently being wrapper(App.js) */\n            <AuthComponent history={history} confirm={confirm} />\n          );\n        }\n\n        console.log('not confirmed!');\n        return null;\n      }\n\n      return null;\n    }\n  };\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AuthenticationService from './services/AuthenticationService';\nimport './App.css';\nimport Login from './Components/Login';\nimport Register from './Components/Register';\nimport Brewing from './Components/Brewing';\n\nclass App extends Component {\n  state = {\n    CurrentUser: {\n      name: 'Christian',\n    },\n    loggedIn: false,\n  };\n\n  async componentDidMount() {}\n\n  updateUser = () => {\n    this.setState({\n      loggedIn: true,\n    });\n  };\n\n  logOut = () => {\n    this.setState({\n      loggedIn: false,\n    });\n  };\n\n  render() {\n    const { CurrentUser } = this.state;\n    return (\n      <Router>\n        <div className=\"App\">\n          <header data-testid=\"header\" className=\"App-header\" />\n\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={props => <Register {...props} updateUser={this.updateUser} />}\n            />\n\n            <Route\n              path=\"/Login\"\n              render={props => <Login {...props} updateUser={this.updateUser} />}\n            />\n            <Route\n              path=\"/Brewing\"\n              render={props => (\n                <Brewing {...props} currentUser={CurrentUser} logOut={this.logOut} />\n              )}\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}