{"version":3,"sources":["services/AuthenticationService.js","Components/Login.js","Components/Register.js","Components/Brewing.js","Components/withAuth.js","App.js","serviceWorker.js","index.js"],"names":["AuthHelperMethods","login","_callee","email","password","res","regenerator_default","a","wrap","_context","prev","next","_this","fetchHeader","method","body","JSON","stringify","sent","setToken","token","abrupt","Promise","resolve","stop","this","loggedIn","getToken","isTokenExpired","decode","exp","Date","now","err","console","log","idToken","localStorage","setItem","getItem","logout","removeItem","getConfirm","answer","url","options","headers","Accept","Content-Type","Authorization","concat","fetch","Object","objectSpread","then","checkStatus","response","json","status","error","Error","statusText","Login","state","Auth","AuthHelperFunctions","handleChange","event","_event$target","target","value","name","setState","defineProperty","submitForm","_this$state","preventDefault","success","props","history","push","replace","submitFakeForm","_this$state2","react_default","createElement","CoffeeImage","src","alt","Card","Form","data-testid","onSubmit","InputField","htmlFor","Input","id","onChange","type","LoginButton","Link","to","Component","styled","div","_templateObject","form","_templateObject2","label","_templateObject3","input","_templateObject4","button","_templateObject5","img","_templateObject6","Register","data","axios","post","redirect","Redirect","Register_CoffeeImage","Register_Card","Register_Form","Register_InputField","Register_Input","Register_LoginButton","Register_templateObject","Register_templateObject2","Register_templateObject3","Register_templateObject4","Register_templateObject5","Register_templateObject6","withAuth","AuthComponent","_Component","AuthWrapped","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","confirm","loaded","inherits","createClass","key","country","roaster","brew_method","coffee_amount","coffee_strength","coffee_coarseness","brewMethods","LogOut","userInfo","username","_this2","Brewing_LoginButton","onClick","Brewing_Card","QuestionMark","Brewing_InputField","Brewing_Input","ButtonContainer","map","RadioButton","RadioLabel","Brewing_templateObject","Brewing_templateObject2","Brewing_templateObject3","Brewing_templateObject4","Brewing_templateObject5","Brewing_templateObject6","_templateObject7","_templateObject8","App","cool","CurrentUser","updateUser","logOut","BrowserRouter","className","Switch","Route","exact","path","render","Components_Register","assign","Components_Login","Components_Brewing","currentUser","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8eb4f49e.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nexport default class AuthHelperMethods {\n  login = async (email, password) => {\n    const res = await this.fetchHeader('/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        email,\n        password,\n      }),\n    });\n    this.setToken(res.token); // Setting the token in localStorage\n    return Promise.resolve(res);\n  };\n\n\n  loggedIn = () => {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken(); // Getting token from localstorage\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  };\n\n  isTokenExpired = (token) => {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) { // Checking if token is expired.\n        return true;\n      }\n      return false;\n    } catch (err) {\n      console.log('expired check failed! Line 42: AuthService.js');\n      return false;\n    }\n  };\n\n  setToken = (idToken) => {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n  };\n\n  getToken = () => localStorage.getItem('id_token');\n\n\n  logout = () => {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n  };\n\n  getConfirm = () => {\n    // Using jwt-decode npm package to decode the token\n    const answer = decode(this.getToken());\n    console.log('Recieved answer!');\n    return answer;\n  };\n\n  fetchHeader = (url, options) => {\n    // performs api calls sending the required authentication headers\n    const headers = {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    };\n    // Setting Authorization header\n    // Authorization: Bearer xxxxxxx.xxxxxxxx.xxxxxx\n    if (this.loggedIn()) {\n      headers.Authorization = `Bearer ${this.getToken()}`;\n    }\n\n    return fetch(url, {\n      headers,\n      ...options,\n    })\n      .then(this.checkStatus)\n      .then(response => response.json());\n  };\n\n  checkStatus = (response) => {\n    // raises an error in case response status is not a success\n    if (response.status >= 200 && response.status < 300) { // Success status lies between 200 to 300\n      return response;\n    }\n    const error = new Error(response.statusText);\n    error.response = response;\n    throw error;\n  };\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport AuthHelperFunctions from '../services/AuthenticationService';\n\nclass Login extends Component {\n  state = {\n    email: '',\n    password: '',\n  };\n\n  Auth = new AuthHelperFunctions();\n\n  componentWillMount() {\n    if (this.Auth.loggedIn() === true) {\n      this.props.history.replace('/Brewing');\n    }\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitForm = async (event) => {\n    event.preventDefault();\n\n    console.log(this.state);\n    const { email, password } = this.state;\n\n    const res = await this.Auth.login(email, password);\n    if (res.success === true) {\n      this.props.history.push('/Brewing');\n    }\n  };\n\n  render() {\n    const { submitFakeForm } = this.props;\n    const { email, password } = this.state;\n\n    return (\n      <div>\n        <CoffeeImage src=\"https://img.icons8.com/cotton/64/000000/cup.png\" alt=\"coffee-mug\" />\n        <Card>\n          <h1>Log In</h1>\n          <Form\n            data-testid=\"login-form\"\n            // For Testing Switch || to &&\n            onSubmit={this.submitForm || (() => submitFakeForm({ email, password }))}\n          >\n            <InputField htmlFor=\"email\">\n              Email\n              <Input\n                id=\"email\"\n                value={email}\n                name=\"email\"\n                onChange={this.handleChange}\n                type=\"email\"\n              />\n            </InputField>\n            <InputField htmlFor=\"password\">\n              Password\n              <Input\n                id=\"password\"\n                value={password}\n                name=\"password\"\n                onChange={this.handleChange}\n                type=\"password\"\n              />\n            </InputField>\n\n            <LoginButton data-testid=\"login-button\" type=\"submit\">\n              Login\n            </LoginButton>\n          </Form>\n        </Card>\n        <p>Don&apos;t Have An Account?</p>\n        <Link to=\"/\">\n          <p>Sign Up Here</p>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n  margin-top: 50px;\n  padding: 10px;\n  width: 300px;\n  height: auto;\n  background-color: #f3f1ee;\n  color: #2f2923;\n  border-radius: 10px;\n  box-shadow: 1px 4px 21px 2px rgba(224, 208, 224, 1);\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nconst InputField = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 10px 0;\n`;\n\nconst Input = styled.input`\n  border-radius: 2px;\n  border: 2px solid #e0ddd9;\n  height: 25px;\n  width: 275px;\n`;\n\nconst LoginButton = styled.button`\n  background: #67615a;\n  color: white;\n  font-weight: bold;\n  font-size: 18px;\n  border: none;\n  border-radius: 5px;\n  margin: 20px 0;\n  width: 150px;\n  height: 30px;\n`;\n\nconst CoffeeImage = styled.img`\n  width: 100px;\n  height: 100px;\n`;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport AuthHelperMethods from '../services/AuthenticationService';\n\nclass Register extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  Auth = new AuthHelperMethods();\n\n  componentWillMount() {\n    if (this.Auth.loggedIn() === true) {\n      this.props.history.replace('/Brewing');\n    }\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitForm = async (event) => {\n    event.preventDefault();\n\n    const { name, email, password } = this.state;\n    const data = await axios.post('/register', {\n      name,\n      email,\n      password,\n    });\n\n    const { success } = data.data;\n    if (success === true) {\n      const res = await this.Auth.login(email, password);\n      if (res.success === true) {\n        this.props.history.push('/Brewing');\n      }\n    }\n  };\n\n  render() {\n    const { submitFakeForm } = this.props;\n    const {\n      email, password, name, redirect,\n    } = this.state;\n    if (redirect) {\n      return <Redirect push to=\"/Brewing\" />;\n    }\n    return (\n      <div>\n        <CoffeeImage src=\"https://img.icons8.com/cotton/64/000000/cup.png\" alt=\"coffee-mug\" />\n        <Card>\n          <h1>Sign Up</h1>\n          <Form\n            data-testid=\"login-form\"\n            // For Testing Switch || to &&\n            onSubmit={this.submitForm || (() => submitFakeForm({ email, password }))}\n          >\n            <InputField htmlFor=\"name\">\n              Name\n              <Input id=\"name\" value={name} name=\"name\" onChange={this.handleChange} type=\"text\" />\n            </InputField>\n            <InputField htmlFor=\"email\">\n              Email\n              <Input\n                id=\"email\"\n                value={email}\n                name=\"email\"\n                onChange={this.handleChange}\n                type=\"email\"\n              />\n            </InputField>\n            <InputField htmlFor=\"password\">\n              Password\n              <Input\n                id=\"password\"\n                value={password}\n                name=\"password\"\n                onChange={this.handleChange}\n                type=\"password\"\n              />\n            </InputField>\n\n            <LoginButton data-testid=\"login-button\" type=\"submit\">\n              Sign Up\n            </LoginButton>\n          </Form>\n        </Card>\n        <p>Have An Account?</p>\n        <Link to=\"/login\">\n          <p>Login Here!</p>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n  margin-top: 50px;\n  padding: 10px;\n  width: 300px;\n  height: auto;\n  background-color: #f3f1ee;\n  color: #2f2923;\n  border-radius: 10px;\n  box-shadow: 1px 4px 21px 2px rgba(224, 208, 224, 1);\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nconst InputField = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 10px 0;\n`;\n\nconst Input = styled.input`\n  border-radius: 2px;\n  border: 2px solid #e0ddd9;\n  height: 25px;\n  width: 275px;\n`;\n\nconst LoginButton = styled.button`\n  background: #67615a;\n  color: white;\n  font-weight: bold;\n  font-size: 18px;\n  border: none;\n  border-radius: 5px;\n  margin: 20px 0;\n  width: 150px;\n  height: 30px;\n`;\n\nconst CoffeeImage = styled.img`\n  width: 100px;\n  height: 100px;\n`;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport AuthHelperMethods from '../services/AuthenticationService';\nimport withAuth from './withAuth';\n\nclass Brewing extends Component {\n  state = {\n    country: '',\n    roaster: '',\n    brew_method: '',\n    coffee_amount: '',\n    coffee_strength: '',\n    coffee_coarseness: '',\n    brewMethods: [\n      {\n        id: 1,\n        name: 'Chemex',\n      },\n      {\n        id: 2,\n        name: 'Hario V60',\n      },\n      {\n        id: 3,\n        name: 'Kalita',\n      },\n      {\n        id: 4,\n        name: 'Cold Brew',\n      },\n    ],\n  };\n\n  Auth = new AuthHelperMethods();\n\n  componentDidMount() {\n    const userInfo = this.Auth.getConfirm();\n    this.setState({\n      username: userInfo.name,\n    });\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  LogOut = () => {\n    this.Auth.logout();\n    this.props.history.replace('/login');\n  };\n\n\n  render() {\n    const {\n      country, roaster, brewMethods, username,\n    } = this.state;\n\n    return (\n      <div>\n        <LoginButton data-testid=\"login-button\" type=\"button\" onClick={this.LogOut}>\n          Logout\n        </LoginButton>\n\n        <h1 data-testid=\"users-intro\">Hi {username}!</h1>\n        <h1>Let&apos;s brew an awesome cup of coffee!</h1>\n        <form>\n          {/* Country and Roaster Section */}\n          <Card>\n            <QuestionMark\n              src=\"https://img.icons8.com/ios/50/000000/help.png\"\n              alt=\"question-country\"\n            />\n            <h3>What type of coffee are we brewing?</h3>\n            <InputField htmlFor=\"country\">\n              Country, Region\n              <Input\n                id=\"country\"\n                value={country}\n                name=\"country\"\n                onChange={this.handleChange}\n                type=\"text\"\n              />\n            </InputField>\n            <InputField htmlFor=\"roaster\">\n              Roaster\n              <Input\n                id=\"roaster\"\n                value={roaster}\n                name=\"roaster\"\n                onChange={this.handleChange}\n                type=\"text\"\n              />\n            </InputField>\n          </Card>\n          {/* Brew Method Section */}\n          <Card>\n            <QuestionMark\n              src=\"https://img.icons8.com/ios/50/000000/help.png\"\n              alt=\"question-country\"\n            />\n            <h3>What brew method are we using?</h3>\n            <ButtonContainer>\n              {brewMethods.map(method => (\n                <div key={method.id}>\n                  <RadioButton\n                    id=\"brew_method\"\n                    value={method.name}\n                    name=\"brew_method\"\n                    onClick={this.handleChange}\n                    type=\"radio\"\n                  />\n                  <RadioLabel htmlFor=\"brew_method\">\n                    <img src=\"https://img.icons8.com/small/32/000000/temperature.png\" alt=\"temp\" />\n                    <span>{method.name}</span>\n                  </RadioLabel>\n                </div>\n              ))}\n            </ButtonContainer>\n          </Card>\n          <Card>\n            <QuestionMark\n              src=\"https://img.icons8.com/ios/50/000000/help.png\"\n              alt=\"question-country\"\n            />\n            <h3>How much coffee are we making?</h3>\n          </Card>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withAuth(Brewing);\n\nconst Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n  margin-top: 50px;\n  padding: 10px;\n  width: 300px;\n  height: auto;\n  background-color: #f3f1ee;\n  color: #2f2923;\n  border-radius: 10px;\n  box-shadow: 1px 4px 21px 2px rgba(224, 208, 224, 1);\n`;\n\nconst InputField = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 10px 0;\n`;\n\nconst Input = styled.input`\n  border-radius: 2px;\n  border: 2px solid #e0ddd9;\n  height: 25px;\n  width: 275px;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n`;\n\nconst RadioLabel = styled.label`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  background-color: #85817d;\n  font-weight: bold;\n  color: white;\n  width: 125px;\n  height: 40px;\n  border-radius: 15px;\n  margin: 5px;\n`;\n\nconst RadioButton = styled.input`\n  margin: 10px 0;\n  &:checked + ${RadioLabel} {\n    background: #67615a;\n  }\n`;\n\nconst LoginButton = styled.button`\n  background: #67615a;\n  color: white;\n  font-weight: bold;\n  font-size: 18px;\n  border: none;\n  border-radius: 5px;\n  margin: 20px 0;\n  width: 150px;\n  height: 30px;\n`;\n\nconst QuestionMark = styled.img`\n  width: 20px;\n  height: 20px;\n`;\n","import React, { Component } from 'react';\nimport AuthHelperMethods from '../services/AuthenticationService';\n\n/* A higher order component is frequently written as a function that returns a class. */\nexport default function withAuth(AuthComponent) {\n  const Auth = new AuthHelperMethods();\n\n  return class AuthWrapped extends Component {\n    state = {\n      confirm: null,\n      loaded: false,\n    };\n\n    /* In the componentDidMount, we would want to do a couple of\n    important tasks in order to verify the current users authentication status\n    prior to granting them enterance into the app. */\n    componentWillMount() {\n      const { history } = this.props;\n      if (!Auth.loggedIn()) {\n        history.replace('/login');\n      } else {\n        /* Try to get confirmation message from the Auth helper. */\n        try {\n          const confirm = Auth.getConfirm();\n          console.log('confirmation is:', confirm);\n          this.setState({\n            confirm,\n            loaded: true,\n          });\n        } catch (err) {\n          console.log(err);\n          Auth.logout();\n          history.replace('/login');\n        }\n      }\n    }\n\n    render() {\n      const { history } = this.props;\n      const { loaded, confirm } = this.state;\n      if (loaded === true) {\n        if (confirm) {\n          console.log('confirmed!');\n          return (\n            /* component that is currently being wrapper(App.js) */\n            <AuthComponent history={history} confirm={confirm} />\n          );\n        }\n\n        console.log('not confirmed!');\n        return null;\n      }\n\n      return null;\n    }\n  };\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AuthenticationService from './services/AuthenticationService';\nimport './App.css';\nimport Login from './Components/Login';\nimport Register from './Components/Register';\nimport Brewing from './Components/Brewing';\n\nclass App extends Component {\n  state = {\n    cool: '',\n    CurrentUser: {\n      name: 'Christian',\n    },\n    loggedIn: false,\n  };\n\n  async componentDidMount() {\n\n  }\n\n  updateUser = () => {\n    this.setState({\n      loggedIn: true,\n    });\n  };\n\n  logOut = () => {\n    this.setState({\n      loggedIn: false,\n    });\n  };\n\n  render() {\n    const { CurrentUser } = this.state;\n    return (\n      <Router>\n        <div className=\"App\">\n          <header className=\"App-header\" />\n\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={props => <Register {...props} updateUser={this.updateUser} />}\n            />\n\n            <Route\n              path=\"/Login\"\n              render={props => <Login {...props} updateUser={this.updateUser} />}\n            />\n            <Route\n              path=\"/Brewing\"\n              render={props => (\n                <Brewing {...props} currentUser={CurrentUser} logOut={this.logOut} />\n              )}\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}